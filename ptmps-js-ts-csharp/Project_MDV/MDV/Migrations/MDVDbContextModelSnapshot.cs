// <auto-generated />
using System;
using MDV.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MDV.Migrations
{
    [DbContext(typeof(MDVDbContext))]
    partial class MDVDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MDV.Domain.Blocos.Bloco", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("endTime")
                        .HasColumnType("int");

                    b.Property<string>("servicoTripulanteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("servicoViaturaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("startTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("servicoViaturaId");

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("MDV.Domain.Passagens.Passagem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AbreviaturaNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoraPassagem")
                        .HasColumnType("int");

                    b.Property<int?>("ViagemHoraInicio")
                        .HasColumnType("int");

                    b.Property<string>("ViagemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViagemPercursoId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ViagemPercursoId", "ViagemHoraInicio");

                    b.ToTable("Passagens");
                });

            modelBuilder.Entity("MDV.Domain.ServicoViaturas.ServicoViatura", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ViaturaId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ViaturaId");

                    b.ToTable("ServicoViaturas");
                });

            modelBuilder.Entity("MDV.Domain.ServicosTripulante.ServicoTripulante", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("codigoServicoTripulante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServicosTripulante");
                });

            modelBuilder.Entity("MDV.Domain.Tripulantes.Tripulante", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dataEmissaoLicencaConducao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataEntradaEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataNascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataSaidaEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataValidadeLicencaConducao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCartaConducao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroCartaoCidadao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroMecanografico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoTripulante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tripulantes");
                });

            modelBuilder.Entity("MDV.Domain.Viagens.Viagem", b =>
                {
                    b.Property<string>("PercursoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HoraInicio")
                        .HasColumnType("int");

                    b.Property<string>("BlocoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descritivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HoraFim")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicoViaturaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicoViaturaId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PercursoId", "HoraInicio");

                    b.HasIndex("BlocoId");

                    b.HasIndex("ServicoViaturaId1");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("MDV.Domain.Viaturas.Viatura", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("data_entrada_servico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("niv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoviatura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Viaturas");
                });

            modelBuilder.Entity("MDV.Domain.Blocos.Bloco", b =>
                {
                    b.HasOne("MDV.Domain.ServicoViaturas.ServicoViatura", null)
                        .WithMany("Blocos")
                        .HasForeignKey("servicoViaturaId");
                });

            modelBuilder.Entity("MDV.Domain.Passagens.Passagem", b =>
                {
                    b.HasOne("MDV.Domain.Viagens.Viagem", null)
                        .WithMany("Passagens")
                        .HasForeignKey("ViagemPercursoId", "ViagemHoraInicio");
                });

            modelBuilder.Entity("MDV.Domain.ServicoViaturas.ServicoViatura", b =>
                {
                    b.HasOne("MDV.Domain.Viaturas.Viatura", null)
                        .WithMany("ServicoViaturas")
                        .HasForeignKey("ViaturaId");
                });

            modelBuilder.Entity("MDV.Domain.Viagens.Viagem", b =>
                {
                    b.HasOne("MDV.Domain.Blocos.Bloco", null)
                        .WithMany("viagens")
                        .HasForeignKey("BlocoId");

                    b.HasOne("MDV.Domain.ServicoViaturas.ServicoViatura", null)
                        .WithMany("Viagens")
                        .HasForeignKey("ServicoViaturaId1");
                });

            modelBuilder.Entity("MDV.Domain.Blocos.Bloco", b =>
                {
                    b.Navigation("viagens");
                });

            modelBuilder.Entity("MDV.Domain.ServicoViaturas.ServicoViatura", b =>
                {
                    b.Navigation("Blocos");

                    b.Navigation("Viagens");
                });

            modelBuilder.Entity("MDV.Domain.Viagens.Viagem", b =>
                {
                    b.Navigation("Passagens");
                });

            modelBuilder.Entity("MDV.Domain.Viaturas.Viatura", b =>
                {
                    b.Navigation("ServicoViaturas");
                });
#pragma warning restore 612, 618
        }
    }
}
